plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply plugin: 'jacoco'
apply from: "$project.rootDir/jacoco/jacoco.gradle"

def libraries = rootProject.ext.libraries
def versions = rootProject.ext.versions

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.tools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.sdk
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug{

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.0"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api project(":ui-components")

    api("org.hisp.dhis:android-core:${libraries.dhis2sdk}") {
        exclude group: "org.hisp.dhis", module: "core-rules"
        exclude group: "com.facebook.flipper"
    }

    api ("org.hisp.dhis.rules:rule-engine:${libraries.ruleEngine}") {
        exclude group: "junit", module: "junit"
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //region GOOGLE AUTO VALUE
    // Google's auto-value. Annotations are used only during compilation time, as well as
    // annotation processor which hoops up into compilation process
    api "com.google.auto.value:auto-value:${libraries.autovalue}"
    kapt "com.google.auto.value:auto-value:${libraries.autovalue}"


    api "androidx.core:core-ktx:${libraries.corektx}"
    api "androidx.appcompat:appcompat:${libraries.appcompat}"
    api "com.google.android.material:material:${libraries.material}"
    api "com.google.code.gson:gson:${libraries.gson}"
    api "de.adorsys.android:securestoragelibrary:${libraries.latestSecureStorageVersion}"

    api "com.google.dagger:dagger:${libraries.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libraries.dagger}"
    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:${libraries.kotlinxmetadata}"

    api "androidx.fragment:fragment-ktx:${libraries.fragmentktx}"
    api "androidx.lifecycle:lifecycle-livedata-ktx:${libraries.lifecycle}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${libraries.lifecycle}"
    api "androidx.lifecycle:lifecycle-extensions:${libraries.lifecycleExtensions}"
    api "androidx.recyclerview:recyclerview:${libraries.recyclerview}"

    api "io.reactivex.rxjava2:rxjava:${libraries.rxjava}"
    api "io.reactivex.rxjava2:rxandroid:${libraries.rxandroid}"

    //compose
    debugApi "androidx.compose.ui:ui-tooling:${libraries.compose}"

    //Timber
    api "com.jakewharton.timber:timber:${libraries.timber}"

    //Compose
    api "androidx.compose.material:material:${libraries.compose}"
    api "androidx.constraintlayout:constraintlayout-compose:${libraries.composeConstraintLayout}"
    api "com.google.android.material:compose-theme-adapter:${libraries.composeTheme}"
    api "androidx.compose.ui:ui-tooling-preview:${libraries.compose}"
    api "androidx.compose.ui:ui:${libraries.compose}"
    api "androidx.compose.runtime:runtime-livedata:${libraries.compose}"
    debugApi "androidx.compose.ui:ui-tooling:${libraries.compose}"

    api "com.github.bumptech.glide:glide:${libraries.glide}"
    kapt "com.github.bumptech.glide:compiler:${libraries.glide}"

    //region QR/Barcode scanner
    api "com.google.zxing:core:${libraries.zxing}"

    api ("me.dm7.barcodescanner:zxing:${libraries.zxingbarcode}"){
        exclude group: "com.google.zxing", module: "core"
    }

    api ("com.journeyapps:zxing-android-embedded:${libraries.zxingandroid}"){
        exclude group: "com.google.zxing", module: "core"
    }

    //rxbinding
    api "com.jakewharton.rxbinding2:rxbinding:${libraries.rxbindings}"
    api "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:${libraries.rxbindings}"

    testApi "junit:junit:${libraries.junit}"

    androidTestApi "androidx.test.ext:junit:$libraries.junit_ext"
    androidTestApi "androidx.test.espresso:espresso-core:$libraries.espresso_core"
    androidTestApi "androidx.test.espresso:espresso-idling-resource:$libraries.espresso_core"
    api "androidx.test.espresso:espresso-idling-resource:$libraries.espresso_core"
    api "androidx.test.espresso.idling:idling-concurrent:$libraries.espresso_core"

    implementation "io.sentry:sentry-android:${libraries.sentry}"
    implementation 'com.github.bmelnychuk:atv:1.2.9'

}