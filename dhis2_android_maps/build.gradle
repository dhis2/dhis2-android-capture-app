plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply plugin: 'jacoco'
apply from: "$project.rootDir/jacoco/jacoco.gradle"

def libraries = rootProject.ext.libraries
def versions = rootProject.ext.versions

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.tools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.sdk

        vectorDrawables.useSupportLibrary = true


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
    }

    flavorDimensions "default"

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(":commons")
    api('org.maplibre.gl:android-sdk:9.5.2') {
        exclude group: 'com.google.android.gms'
    }
    api('org.maplibre.gl:android-sdk-geojson:5.9.0') {
        exclude group: 'com.google.android.gms'
    }
    implementation("com.mapbox.mapboxsdk:mapbox-android-plugin-markerview-v8:${libraries.mapboxmarkerview}") {
        exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-sdk'
    }
    implementation("com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v9:${libraries.mapboxannotation}") {
        exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-sdk'
    }

    //TEST
    androidTestImplementation "org.mockito:mockito-android:$libraries.mockito_android"
    androidTestImplementation "org.mockito:mockito-core:$libraries.mockito"
    testImplementation "org.mockito:mockito-core:$libraries.mockito"
    testImplementation "org.mockito:mockito-inline:$libraries.mockito_inline"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$libraries.mockito_kotlin"
}