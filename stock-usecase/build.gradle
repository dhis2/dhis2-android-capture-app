plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.autonomousapps.dependency-analysis' version "1.19.0"
}
apply plugin: "kotlinx-serialization"
apply from: "$project.rootDir/jacoco/jacoco.gradle"

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

android {
    compileSdk versions.sdk
    namespace "org.dhis2.android.rtsm"

    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.sdk
        versionCode versions.vCode
        versionName versions.vName
        applicationId versions.applicationId
        multiDexEnabled true

        setProperty("archivesBaseName", "psm-v" + versions.versionName)

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "dagger.hilt.disableCrossCompilationRootValidation": "true"
                ]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("long", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
            buildConfigField("String", "APPLICATION_ID", "\"${defaultConfig.applicationId}\"")
        }

        debug {
            buildConfigField("long", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
            buildConfigField("String", "APPLICATION_ID", "\"${defaultConfig.applicationId}\"")
        }


    }

    flavorDimensions "default"

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility versions.sourceCompat
        targetCompatibility versions.targetCompat
    }

    buildFeatures {
        compose true
        viewBinding true
        dataBinding true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/gradle/incremental.annotation.processors'
    }

    composeOptions {
        kotlinCompilerExtensionVersion = versions.kotlinCompilerExtensionVersion
    }

    kotlinOptions {
        jvmTarget = versions.targetCompat
    }

}

dependencies {

    implementation project(":commons")
    implementation project(":compose-table")

    implementation libs.kotlin.serialization

    implementation libs.androidx.activityCompose
    implementation libs.androidx.annotation
    implementation libs.androidx.legacySupport
    coreLibraryDesugaring libs.android.desugar
    implementation libs.androidx.constraintLayout
    implementation libs.rx.rxRelay
    implementation libs.security.openId
    implementation libs.androidx.preferencesKtx
    implementation libs.androidx.work
    implementation libs.androidx.workRuntimeKtx
    implementation libs.androidx.workRx
    implementation libs.androidx.workGCM

    implementation libs.androidx.activityKtx
    implementation libs.androidx.fragmentKtx
    implementation libs.androidx.viewModelCompose
    implementation libs.dagger.hilt
    kapt libs.dagger.hiltCompilerNew
    implementation libs.analytics.crashActivity
    debugImplementation libs.analytics.flipper
    debugImplementation libs.analytics.soloader
    debugImplementation(libs.analytics.flipperNetwork) {
        exclude group: 'com.squareup.okhttp3'
    }
    releaseImplementation libs.analytics.flipperNoop

    testImplementation libs.test.junit
    testImplementation libs.test.mockitoKotlinLegacy
    testImplementation libs.test.mockitoInline
    testImplementation libs.test.archCoreTesting
    testImplementation libs.test.javafaker
    testImplementation libs.test.kotlinCoroutines
    androidTestImplementation libs.test.testJUnitExt
    androidTestImplementation libs.test.espresso
    androidTestImplementation libs.test.archCoreTesting
}

kapt {
    correctErrorTypes true
}
